{"remainingRequest":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\babel-loader\\lib\\index.js!D:\\GaeaProject\\jpn_medical_web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GaeaProject\\jpn_medical_web\\src\\router\\router.js","dependencies":[{"path":"D:\\GaeaProject\\jpn_medical_web\\src\\router\\router.js","mtime":1577951918283},{"path":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFJvdXRlciBmcm9tICd2dWUtcm91dGVyJzsKaW1wb3J0IGNvbmYgZnJvbSAnLi9jb25mJzsKaW1wb3J0IGNvbmZJbmZvIGZyb20gJy4uLy4uL2NvbmYvY29uZi5qc29uJzsKaW1wb3J0IHsgaW52ZW50b3J5IH0gZnJvbSAnLi9jb25mJzsgLy9pbXBvcnQgcG9zdCBmcm9tICcuLi9yZXF1ZXN0L2F4aW9zJwoKVnVlLnVzZShSb3V0ZXIpOwp2YXIgcm91dGVyID0gbmV3IFJvdXRlcihjb25mKTsKcm91dGVyLmJlZm9yZUVhY2goZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7CiAgaWYgKHRvLnBhdGggPT09ICcvbG9naW4nIHx8IHRvLnBhdGggPT09ICIvY29kZSIpIHsKICAgIG5leHQoKTsKICB9IGVsc2UgewogICAgaWYgKGludmVudG9yeVt0by5wYXRoXSkgewogICAgICBuZXh0KCk7CiAgICB9IGVsc2UgewogICAgICAvKnNwbGljaW5nIHRoZSByb3V0ZSovCiAgICAgIHZhciByb290ID0gIi9zYWxlcyI7CiAgICAgIC8qZ2V0IGNvbXBhbnkgY29kZSovCgogICAgICB2YXIgY29kZSA9IHJvdXRlci5hcHAuJHN0b3JlLnN0YXRlLmNvZGU7CiAgICAgIC8qZ2V0IGNvbmYvY29uZi5qc29uIG9wdGlvbnMqLwoKICAgICAgdmFyIGNvbmZOb2RlID0gY29uZkluZm8uc2VydmVzW2NvZGVdOwogICAgICB2YXIgcGF0aCA9IHJvb3QgKyAiLyI7CgogICAgICBpZiAoY29uZk5vZGUpIHsKICAgICAgICBwYXRoID0gcGF0aCArIGNvbmZOb2RlLm5hbWUgKyB0by5wYXRoOwogICAgICB9IGVsc2UgewogICAgICAgIHBhdGggPSBwYXRoICsgIi9jb21tb24iICsgdG8ucGF0aDsKICAgICAgfQogICAgICAvKmNoZWNrIHRoZSBwYXRoIGlzIGV4aXN0Ki8KCgogICAgICBpZiAoIWludmVudG9yeVtwYXRoXSkgewogICAgICAgIC8qaWYgbm90IGV4aXN0Ki8KICAgICAgICBwYXRoID0gcm9vdCArICIvY29tbW9uIiArIHRvLnBhdGg7CgogICAgICAgIGlmICghaW52ZW50b3J5W3BhdGhdKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICB9CgogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiBwYXRoLAogICAgICAgIHF1ZXJ5OiB0by5xdWVyeQogICAgICB9KTsKICAgIH0KICAgIC8qcG9zdCgnL3NvYml6L2lzbG9naW4nKS50aGVuKCgpPT57DQogICAgCW5leHQoKTsNCiAgICB9KS5jYXRjaCgoKT0+ew0KICAgIAluZXh0KCcvbG9naW4nKTsNCiAgICB9KSovCgogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHJvdXRlcjs="},{"version":3,"sources":["D:/GaeaProject/jpn_medical_web/src/router/router.js"],"names":["Vue","Router","conf","confInfo","inventory","use","router","beforeEach","to","from","next","path","root","code","app","$store","state","confNode","serves","name","query"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CACA;;AACAJ,GAAG,CAACK,GAAJ,CAAQJ,MAAR;AACA,IAAMK,MAAM,GAAG,IAAIL,MAAJ,CAAWC,IAAX,CAAf;AACAI,MAAM,CAACC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACrC,MAAIF,EAAE,CAACG,IAAH,KAAY,QAAZ,IAAwBH,EAAE,CAACG,IAAH,KAAY,OAAxC,EAAiD;AAChDD,IAAAA,IAAI;AACJ,GAFD,MAEO;AACN,QAAGN,SAAS,CAACI,EAAE,CAACG,IAAJ,CAAZ,EAAsB;AACrBD,MAAAA,IAAI;AACJ,KAFD,MAEK;AACJ;AACA,UAAIE,IAAI,GAAG,QAAX;AACA;;AACA,UAAIC,IAAI,GAAGP,MAAM,CAACQ,GAAP,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBH,IAAnC;AACA;;AACA,UAAII,QAAQ,GAAGd,QAAQ,CAACe,MAAT,CAAgBL,IAAhB,CAAf;AACA,UAAIF,IAAI,GAAGC,IAAI,GAAG,GAAlB;;AACA,UAAGK,QAAH,EAAY;AACXN,QAAAA,IAAI,GAAGA,IAAI,GAAGM,QAAQ,CAACE,IAAhB,GAAuBX,EAAE,CAACG,IAAjC;AACA,OAFD,MAEK;AACJA,QAAAA,IAAI,GAAGA,IAAI,GAAG,SAAP,GAAmBH,EAAE,CAACG,IAA7B;AACA;AAED;;;AACA,UAAG,CAACP,SAAS,CAACO,IAAD,CAAb,EAAoB;AACnB;AACAA,QAAAA,IAAI,GAAGC,IAAI,GAAG,SAAP,GAAmBJ,EAAE,CAACG,IAA7B;;AACA,YAAG,CAACP,SAAS,CAACO,IAAD,CAAb,EAAoB;AACnB;AACA;AACD;;AACDD,MAAAA,IAAI,CAAC;AACJC,QAAAA,IAAI,EAAEA,IADF;AAEJS,QAAAA,KAAK,EAAEZ,EAAE,CAACY;AAFN,OAAD,CAAJ;AAIA;AACD;;;;;;AAKA;AACD,CAvCD;AAwCA,eAAed,MAAf","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport conf from './conf'\r\nimport confInfo from '../../conf/conf.json'\r\nimport { inventory } from './conf'\r\n//import post from '../request/axios'\r\nVue.use(Router)\r\nconst router = new Router(conf)\r\nrouter.beforeEach((to, from, next) => {\n\tif (to.path === '/login' || to.path === \"/code\") {\n\t\tnext();\n\t} else {\r\n\t\tif(inventory[to.path]){\r\n\t\t\tnext();\r\n\t\t}else{\r\n\t\t\t/*splicing the route*/\r\n\t\t\tlet root = \"/sales\";\r\n\t\t\t/*get company code*/\r\n\t\t\tlet code = router.app.$store.state.code;\r\n\t\t\t/*get conf/conf.json options*/\r\n\t\t\tlet confNode = confInfo.serves[code]\t\t\r\n\t\t\tlet path = root + \"/\";\r\n\t\t\tif(confNode){\r\n\t\t\t\tpath = path + confNode.name + to.path;\r\n\t\t\t}else{\r\n\t\t\t\tpath = path + \"/common\" + to.path;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*check the path is exist*/\r\n\t\t\tif(!inventory[path]){\r\n\t\t\t\t/*if not exist*/\r\n\t\t\t\tpath = root + \"/common\" + to.path;\r\n\t\t\t\tif(!inventory[path]){\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnext({\r\n\t\t\t\tpath: path,\r\n\t\t\t\tquery: to.query\r\n\t\t\t})\r\n\t\t}\r\n\t\t/*post('/sobiz/islogin').then(()=>{\r\n\t\t\tnext();\r\n\t\t}).catch(()=>{\r\n\t\t\tnext('/login');\r\n\t\t})*/\n\t}\n})\r\nexport default router\r\n"]}]}