{"remainingRequest":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\GaeaProject\\jpn_medical_web\\node_modules\\babel-loader\\lib\\index.js!D:\\GaeaProject\\jpn_medical_web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GaeaProject\\jpn_medical_web\\src\\request\\axios.js","dependencies":[{"path":"D:\\GaeaProject\\jpn_medical_web\\src\\request\\axios.js","mtime":1592965847568},{"path":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GaeaProject\\jpn_medical_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBjb25mIGZyb20gJy4uLy4uL2NvbmYvY29uZic7CmltcG9ydCBzdG9yZSBmcm9tICcuLi9zdG9yZSc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyL3JvdXRlci5qcyc7CmltcG9ydCBxcyBmcm9tICdxcyc7CmF4aW9zLmRlZmF1bHRzLnRpbWVvdXQgPSAyMDAwOyAvL+WTjeW6lOaXtumXtAoKYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD1VVEYtOCc7IC8v6YWN572u6K+35rGC5aS0Ci8vYXhpb3MuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzPWZhbHNlCi8vUE9TVOS8oOWPguW6j+WIl+WMlijmt7vliqDor7fmsYLmi6bmiKrlmagpCgpheGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8v5Zyo5Y+R6YCB6K+35rGC5LmL5YmN5YGa5p+Q5Lu25LqLCiAgdmFyIHRva2VuID0gc3RvcmUgJiYgc3RvcmUuc3RhdGUgPyBzdG9yZS5zdGF0ZS50b2tlbiA6ICIiOwogIGNvbmZpZy5oZWFkZXJzWydUb2tlbiddID0gdG9rZW47CiAgY29uZmlnLmhlYWRlcnNbJ1NjZW5lVHlwZSddID0gJ2FwcCc7CiAgY29uZmlnLmhlYWRlcnNbJ0RldmljZUlkJ10gPSAnJzsKCiAgaWYgKGNvbmZpZy5tZXRob2QgPT09ICdwb3N0JyAmJiBjb25maWcuZGF0YSkgewogICAgY29uZmlnLmRhdGEgPSBxcy5zdHJpbmdpZnkoY29uZmlnLmRhdGEpOwogIH0KCiAgaWYgKGNvbmZpZy5tZXRob2QgPT09ICdnZXQnKSB7CiAgICBpZiAoIWNvbmZpZy5wYXJhbXMpIGNvbmZpZy5wYXJhbXMgPSB7fTsKICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvL+i/lOWbnueKtuaAgeWIpOaWrSjmt7vliqDlk43lupTmi6bmiKrlmagpCgpheGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXMpIHsKICBpZiAoIXJlcy5kYXRhLklzUG9zaXRpdmUpIHsKICAgIC8qaWYocmVzLmRhdGEuRXJyb3JDb2RlID09IDEwMSl7DQogICAgCXJvdXRlci5wdXNoKCcvbG9naW4nKTsNCiAgICAJcmV0dXJuDQogICAgfSovCiAgICByZXMuZGF0YS5Jc1Bvc2l0aXZlID0gZmFsc2U7IC8vd2hlbiBJc1Bvc2l0aXZlIGlzIE51bGwKCiAgICByZXR1cm4gcmVzLmRhdGE7CiAgfQoKICByZXR1cm4gcmVzLmRhdGE7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCfnvZHnu5zlvILluLgnKTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8g5YWs5YWxZ2V06K+35rGCCgpleHBvcnQgdmFyIGdldCA9IGZ1bmN0aW9uIGdldCh1cmwsIHBhcmFtcykgewogIHJldHVybiBheGlvcy5nZXQoJy9BUEknICsgdXJsLCB7CiAgICBwYXJhbXM6IHBhcmFtcwogIH0pOwp9OyAvLyDlhazlhbFwb3N06K+35rGCCgpleHBvcnQgdmFyIHBvc3QgPSBmdW5jdGlvbiBwb3N0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zLnBvc3QoJy9BUEknICsgdXJsLCBwYXJhbXMpOwp9OwpleHBvcnQgZGVmYXVsdCBheGlvczs="},{"version":3,"sources":["D:/GaeaProject/jpn_medical_web/src/request/axios.js"],"names":["axios","conf","store","router","qs","defaults","timeout","headers","post","interceptors","request","use","config","token","state","method","data","stringify","params","error","Promise","reject","response","res","IsPositive","console","log","get","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;AACAJ,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB,IAAzB,C,CAAsD;;AACtDN,KAAK,CAACK,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,iDAA9C,C,CAAwG;AACxG;AAEA;;AACAR,KAAK,CAACS,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,MAAD,EAAY;AACvC;AACF,MAAIC,KAAK,GAAGX,KAAK,IAAEA,KAAK,CAACY,KAAb,GAAmBZ,KAAK,CAACY,KAAN,CAAYD,KAA/B,GAAqC,EAAjD;AAEAD,EAAAA,MAAM,CAACL,OAAP,CAAe,OAAf,IAAwBM,KAAxB;AACAD,EAAAA,MAAM,CAACL,OAAP,CAAe,WAAf,IAA4B,KAA5B;AACAK,EAAAA,MAAM,CAACL,OAAP,CAAe,UAAf,IAA2B,EAA3B;;AAEA,MAAGK,MAAM,CAACG,MAAP,KAAmB,MAAnB,IAA6BH,MAAM,CAACI,IAAvC,EAA4C;AAC5CJ,IAAAA,MAAM,CAACI,IAAP,GAAcZ,EAAE,CAACa,SAAH,CAAaL,MAAM,CAACI,IAApB,CAAd;AACC;;AACF,MAAGJ,MAAM,CAACG,MAAP,KAAmB,KAAtB,EAA4B;AAC3B,QAAG,CAACH,MAAM,CAACM,MAAX,EAAkBN,MAAM,CAACM,MAAP,GAAc,EAAd;AAClB;;AACE,SAAON,MAAP;AACH,CAfD,EAeE,UAACO,KAAD,EAAU;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAjBD,E,CAmBA;;AACAnB,KAAK,CAACS,YAAN,CAAmBa,QAAnB,CAA4BX,GAA5B,CAAgC,UAACY,GAAD,EAAQ;AACpC,MAAG,CAACA,GAAG,CAACP,IAAJ,CAASQ,UAAb,EAAwB;AAC1B;;;;AAIAD,IAAAA,GAAG,CAACP,IAAJ,CAASQ,UAAT,GAAsB,KAAtB,CAL0B,CAKE;;AACtB,WAAOD,GAAG,CAACP,IAAX;AACH;;AACD,SAAOO,GAAG,CAACP,IAAX;AACH,CAVD,EAUG,UAACG,KAAD,EAAW;AACVM,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAbD,E,CAgBA;;AACA,OAAO,IAAMQ,GAAG,GAAC,SAAJA,GAAI,CAACC,GAAD,EAAMV,MAAN,EAAiB;AAChC,SAAOlB,KAAK,CAAC2B,GAAN,CAAU,SAAOC,GAAjB,EAAsB;AAACV,IAAAA,MAAM,EAAEA;AAAT,GAAtB,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAMV,IAAI,GAAG,SAAPA,IAAO,CAACoB,GAAD,EAAMV,MAAN,EAAiB;AACnC,SAAOlB,KAAK,CAACQ,IAAN,CAAW,SAAOoB,GAAlB,EAAuBV,MAAvB,CAAP;AACD,CAFM;AAIP,eAAelB,KAAf","sourcesContent":["import axios from 'axios'\r\nimport conf from '../../conf/conf'\r\nimport store from '../store'\r\nimport router from '../router/router.js'\r\nimport qs from 'qs'\r\naxios.defaults.timeout = 2000;                        //响应时间\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';        //配置请求头\r\n//axios.defaults.withCredentials=false\r\n\r\n//POST传参序列化(添加请求拦截器)\r\naxios.interceptors.request.use((config) => {\r\n    //在发送请求之前做某件事\r\n  let token = store&&store.state?store.state.token:\"\"\r\n\r\n  config.headers['Token']=token\r\n  config.headers['SceneType']='app'\r\n  config.headers['DeviceId']=''\r\n\r\n  if(config.method  === 'post' && config.data){\r\n\t\tconfig.data = qs.stringify(config.data);\r\n  }\r\n\tif(config.method  === 'get'){\r\n\t\tif(!config.params)config.params={};\r\n\t}\r\n    return config;\r\n},(error) =>{\r\n    return Promise.reject(error);\r\n});\r\n\r\n//返回状态判断(添加响应拦截器)\r\naxios.interceptors.response.use((res) =>{\r\n    if(!res.data.IsPositive){\r\n\t\t/*if(res.data.ErrorCode == 101){\r\n\t\t\trouter.push('/login');\r\n\t\t\treturn\r\n\t\t}*/\r\n\t\tres.data.IsPositive = false;//when IsPositive is Null\r\n        return res.data;\r\n    }\t\r\n    return res.data;\r\n}, (error) => {\r\n    console.log('网络异常')\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\n// 公共get请求\r\nexport const get=(url, params) => {\r\n  return axios.get('/API'+url, {params: params});\r\n}\r\n\r\n// 公共post请求\r\nexport const post = (url, params) => {\r\n  return axios.post('/API'+url, params);\r\n}\r\n\r\nexport default axios\r\n"]}]}